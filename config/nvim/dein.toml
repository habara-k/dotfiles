# Required:
[[plugins]]
repo = 'Shougo/dein.vim'


# docs -------------
[[plugins]]
repo = 'vim-jp/vimdoc-ja.git'


# Git --------------
[[plugins]]
repo = 'tpope/vim-fugitive'

[[plugins]]
repo = 'airblade/vim-gitgutter'
hook_add = '''
set signcolumn=yes
set updatetime=1000

nmap <silent> ( :GitGutterNextHunk<CR>
nmap <silent> ) :GitGutterPrevHunk<CR>
'''
# ------------------


# visual -----------
[[plugins]]
repo = 'thinca/vim-zenspace'

[[plugins]]
repo = 'NLKNguyen/papercolor-theme'

[[plugins]]
repo = 'itchyny/lightline.vim'
hook_add = '''
let g:lightline = {
    \ 'colorscheme': 'PaperColor',
    \ 'active': {
    \   'left': [ [ 'mode', 'paste' ],
    \             [ 'gitbranch', 'readonly', 'filename', 'modified' ] ]
    \ },
    \ 'component_function': {
    \   'gitbranch': 'FugitiveHead'
    \ },
    \ }
'''

[[plugins]]
repo = 'ap/vim-buftabline'

[[plugins]]
repo = 'osyo-manga/vim-precious'
depends = ['context_filetype.vim']

[[plugins]]
repo = 'Shougo/context_filetype.vim'
# ------------------


# Language support -
[[plugins]]
repo = 'nvim-treesitter/nvim-treesitter'
merged = 0
do = ':TSUpdate'
hook_add = '''
lua <<EOF
require'nvim-treesitter.configs'.setup {
  highlight = {
    enable = true,
  }
}
EOF
'''

[[plugins]]
repo = "neoclide/coc.nvim"
merge = 0
rev = "release"
hook_add = '''
nmap <silent> <SPACE>d <Plug>(coc-definition)
nmap <silent> <SPACE>y <Plug>(coc-type-definition)
nmap <silent> <SPACE>i <Plug>(coc-implementation)
nmap <silent> <SPACE>r <Plug>(coc-references)

" use <tab> for trigger completion and navigate to the next complete item
function! s:check_back_space() abort
  let col = col('.') - 1
  return !col || getline('.')[col - 1] =~ '\s'
endfunction

inoremap <silent><expr> <Tab>
      \ pumvisible() ? "\<C-n>" :
      \ <SID>check_back_space() ? "\<Tab>" :
      \ coc#refresh()

inoremap <expr> <cr> pumvisible() ? "\<C-y>" : "\<C-g>u\<CR>"
'''
# ------------------


# file exploler ----
[[plugins]]
repo = "Shougo/defx.nvim"
depends = ["defx-git"]
hook_add = '''
nnoremap <silent><C-f> :<C-u>Defx<CR>

autocmd FileType defx call s:defx_my_settings()

function! s:defx_my_settings() abort
  nnoremap <silent><buffer><expr> <CR>
   \ defx#do_action('open')
  nnoremap <silent><buffer><expr> c
  \ defx#do_action('copy')
  nnoremap <silent><buffer><expr> m
  \ defx#do_action('move')
  nnoremap <silent><buffer><expr> p
  \ defx#do_action('paste')
  nnoremap <silent><buffer><expr> l
  \ defx#do_action('drop')
  nnoremap <silent><buffer><expr> K
  \ defx#do_action('new_directory')
  nnoremap <silent><buffer><expr> N
  \ defx#do_action('new_file')
  nnoremap <silent><buffer><expr> d
  \ defx#do_action('remove')
  nnoremap <silent><buffer><expr> r
  \ defx#do_action('rename')
  nnoremap <silent><buffer><expr> yy
  \ defx#do_action('yank_path')
  nnoremap <silent><buffer><expr> .
  \ defx#do_action('toggle_ignored_files')
  nnoremap <silent><buffer><expr> h
  \ defx#do_action('cd', ['..'])
  nnoremap <silent><buffer><expr> q
  \ defx#do_action('quit')
endfunction
'''

[[plugins]]
repo = "junegunn/fzf.vim"
hook_add = '''
nnoremap <silent> ,a :<C-u>Ag<CR>
nnoremap <silent> ,f :<C-u>Files<CR>
nnoremap <silent> ,g :<C-u>GFiles<CR>
nnoremap <silent> ,b :<C-u>Buffers<CR>
nnoremap <silent> ,m :<C-u>History<CR>

set rtp+=/usr/local/opt/fzf
'''
# ------------------

